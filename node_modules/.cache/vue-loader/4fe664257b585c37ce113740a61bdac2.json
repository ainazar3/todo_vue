{"remainingRequest":"/home/ainazar/projects/todo_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ainazar/projects/todo_vue/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ainazar/projects/todo_vue/src/components/TodoList.vue","mtime":1561466161938},{"path":"/home/ainazar/projects/todo_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ainazar/projects/todo_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ainazar/projects/todo_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ainazar/projects/todo_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"TodoList\",\n    data() {\n        return {\n            newTodo: \"\",\n            idForTodo: 3,\n            beforeEditing: \"\",\n            filter: \"all\",\n            todos: [\n                {\n                    'id': 1,\n                    'title': 'Finish vue screencast!',\n                    completed: false,\n                    editing: false\n                },\n                {\n                    'id': 2,\n                    'title': 'Take over world!',\n                    completed: false,\n                    editing: false\n                },\n            ]\n        }\n    },\n    directives: {\n        focus: {\n            inserted: function (el) {\n                el.focus()\n            }\n        }\n    },\n    computed: {\n        remaining() {\n            return this.todos.filter(todo => !todo.completed).length\n        },\n        anyRemaining() {\n            return this.remaining !== 0\n        },\n        todosFiltered() {\n            if(this.filter === \"all\") {\n                return this.todos\n            }\n            else if(this.filter === \"active\") {\n                return this.todos.filter(todo => !todo.completed)\n            }\n            else if(this.filter === \"completed\") {\n                return this.todos.filter(todo => todo.completed)\n            }\n        }\n    },\n\n    methods: {\n        addTodo() {\n            if(this.newTodo.trim().length === 0) {\n                return\n            }\n\n            this.todos.push({\n                id: this.idForTodo,\n                title: this.newTodo,\n                completed: false\n\n            })\n            this.idForTodo++;\n            this.newTodo = \"\";\n        },\n        removeTodo(index) {\n            this.todos.splice(index, 1);\n        },\n        editTodo(todo) {\n            this.beforeEditing = todo.title\n            todo.editing = true\n        },\n        doneEdit(todo) {\n            if(todo.title.trim().length === 0) {\n                todo.title = this.beforeEditing\n            }\n\n            todo.editing = false\n        },\n        cancelEdit(todo) {\n            todo.title = this.beforeEditing;\n            todo.editing = false\n        },\n        checkAll() {\n            this.todos.forEach((todo) => todo.completed = event.target.checked)\n        },\n        clearCompleted() {\n            this.todos = this.todos.filter(todo => !todo.completed)\n        }\n    }\n}\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <input type=\"text\" class = \"todo-input\" placeholder = \"What needs to be done?\" v-model = \"newTodo\"\n           v-on:keyup.enter = \"addTodo\">\n    <button class = \"button1\" :class = \"{disabled: newTodo.trim().length === 0, testhover: newTodo.trim().length > 0}\" @click = \"addTodo\">Add Todo</button>\n    <transition-group enter-active-class = \"animated fadeInRight\" leave-active-class = \"animated fadeOutRight\">\n    <div v-for = \"(todo, index) in todosFiltered\" :key = \"todo.id\" class = \"todo-item\">\n        <div class = \"todo-item-left\">\n            <input type=\"checkbox\" v-model = \"todo.completed\" class = \"input1\">\n            <div class = \"todo-item-label\" :class = \"{completed: todo.completed}\" v-if = \"!todo.editing\" @dblclick=\"editTodo(todo)\">{{todo.title}}</div>\n            <input type=\"text\" v-model = \"todo.title\" class = \"todo-item-edit\" v-else @blur = \"doneEdit(todo)\"\n            @keyup.enter = \"doneEdit(todo)\" v-focus @keyup.esc = \"cancelEdit(todo)\">\n        </div>\n        <div class=\"remove-item\" v-on:click = \"removeTodo(index)\">\n            &times;\n        </div>\n    </div>\n    </transition-group>\n\n    <div class=\"extra-container\">\n        <div>\n            <label><input type=\"checkbox\" v-on:change = \"checkAll\" :checked = \"!anyRemaining\">Check All</label>\n        </div>\n        <div>\n            {{remaining}} items left\n        </div>\n    </div>\n\n    <div class=\"extra-container\">\n        <div>\n            <button class = \"button2\" v-bind:class = \"{active: filter === 'all'}\" @click = \"filter = 'all'\">All</button>\n            <button class = \"button2 buttonPosition\" v-bind:class = \"{active: filter === 'active'}\" @click = \"filter = 'active'\">Active</button>\n            <button class = \"button2 buttonPosition\" v-bind:class = \"{active: filter === 'completed'}\" @click = \"filter = 'completed'\">Completed</button>\n        </div>\n\n        <div>\n            <button class = \"button3\" @click = \"clearCompleted\" v-bind:class = \"{disabled:todos.filter(todo => todo.completed).length === 0, testhover2:todos.filter(todo => todo.completed).length > 0 }\">Clear Completed</button>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n    export default {\n        name: \"TodoList\",\n        data() {\n            return {\n                newTodo: \"\",\n                idForTodo: 3,\n                beforeEditing: \"\",\n                filter: \"all\",\n                todos: [\n                    {\n                        'id': 1,\n                        'title': 'Finish vue screencast!',\n                        completed: false,\n                        editing: false\n                    },\n                    {\n                        'id': 2,\n                        'title': 'Take over world!',\n                        completed: false,\n                        editing: false\n                    },\n                ]\n            }\n        },\n        directives: {\n            focus: {\n                inserted: function (el) {\n                    el.focus()\n                }\n            }\n        },\n        computed: {\n            remaining() {\n                return this.todos.filter(todo => !todo.completed).length\n            },\n            anyRemaining() {\n                return this.remaining !== 0\n            },\n            todosFiltered() {\n                if(this.filter === \"all\") {\n                    return this.todos\n                }\n                else if(this.filter === \"active\") {\n                    return this.todos.filter(todo => !todo.completed)\n                }\n                else if(this.filter === \"completed\") {\n                    return this.todos.filter(todo => todo.completed)\n                }\n            }\n        },\n\n        methods: {\n            addTodo() {\n                if(this.newTodo.trim().length === 0) {\n                    return\n                }\n\n                this.todos.push({\n                    id: this.idForTodo,\n                    title: this.newTodo,\n                    completed: false\n\n                })\n                this.idForTodo++;\n                this.newTodo = \"\";\n            },\n            removeTodo(index) {\n                this.todos.splice(index, 1);\n            },\n            editTodo(todo) {\n                this.beforeEditing = todo.title\n                todo.editing = true\n            },\n            doneEdit(todo) {\n                if(todo.title.trim().length === 0) {\n                    todo.title = this.beforeEditing\n                }\n\n                todo.editing = false\n            },\n            cancelEdit(todo) {\n                todo.title = this.beforeEditing;\n                todo.editing = false\n            },\n            checkAll() {\n                this.todos.forEach((todo) => todo.completed = event.target.checked)\n            },\n            clearCompleted() {\n                this.todos = this.todos.filter(todo => !todo.completed)\n            }\n        }\n    }\n</script>\n\n<style>\n    @import \"../../node_modules/animate.css/animate.css\";\n\n    button {\n        cursor: pointer;\n    }\n\n    .todo-input {\n        width: 100%;\n        padding: 10px 18px;\n        font-size: 18px;\n        margin-bottom: 16px;\n        border-radius: 5px;\n    }\n\n    &:focus {\n        outline: 0;\n     }\n\n    .todo-ite\n        margin-bottom: 12px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-top: 35px;\n        animation-duration: 0.5s;\n    }\n\n    .remove-item {\n        cursor:pointer;\n        margin-left: 14px;\n        animation-duration: 0.3s\n    }\n\n    .remove-item:hover {\n        color: black;\n    }\n\n    .todo-item-left {\n        display: flex;\n        align-items: center;\n    }\n\n    .todo-item-label {\n        padding: 10px;\n        border: 1px solid white;\n        margin-left: 12px;\n    }\n\n    .todo-item-edit {\n        font-size: 24px;\n        color: #2c3e50;\n        margin-left: 12px;\n        width: 100%;\n        padding: 10px;\n        border: 1px solid #ccc;\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    }\n\n    @keyframes completed {\n        from { text-decoration-color: transparent; }\n        to { text-decoration-color: auto; }\n    }\n\n    .completed {\n        -webkit-transition-duration: 0.4s; /* Safari */\n        transition-duration: 0.4s;\n        text-decoration: line-through;\n        color:#9b9595;\n        animation: completed 0.4s linear;\n    }\n\n    .button1 {\n        width: 100%;\n        background-color: #4CAF50;\n        color: white;\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        border-radius: 5px;\n    }\n\n    .button1 {\n        -webkit-transition-duration: 0.4s; /* Safari */\n        transition-duration: 0.4s;\n    }\n\n    .testhover:hover {\n        background-color: #f9f7f7; /* Green */\n        color: black;\n        border-color: #4CAF50;\n        box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n\n    }\n\n    .disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n\n    .extra-container {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 16px;\n        border-top: 1px solid lightgrey;\n        padding-top: 14px;\n        margin-bottom: 14px;\n    }\n    .button2 {\n        background-color: #fcf4f4;\n        color: black;\n        padding: 7px 22px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 15px;\n        border-radius: 5px;\n    }\n\n    .button3 {\n        -webkit-transition-duration: 0.4s; /* Safari */\n        transition-duration: 0.4s;\n        background-color: black;\n        color: white;\n        padding: 10px 27px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        border-radius: 5px;\n    }\n\n    .buttonPosition {\n        margin-left: 4px;\n    }\n    .button2:hover {\n        background: lightblue;\n    }\n\n    .active {\n        background: lightblue;\n    }\n\n    .input1 {\n        height: 25px;\n        width: 25px;\n    }\n\n    .testhover2:hover {\n        background-color: #f9f7f7;\n        color: black;\n        border-color: black;\n        box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n\n    }\n\n\n\n\n\n</style>"]}]}